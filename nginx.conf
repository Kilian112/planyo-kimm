# Basic settings for Nginx
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_types text/plain application/xml application/json text/css application/javascript;

    # Upstream block for Flask app
    upstream flask_app {
        server app:8001;  # Connect to Flask app running on port 8001 inside Docker
    }

    # Server block for main API access via port 80 (publicly exposed)
    server {
        listen 80;  # Forward incoming requests from the default HTTP port

        location / {
            proxy_pass http://flask_app;  # Send traffic to Flask app
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Server block to route requests via port 4200
    server {
        listen 4200;

        location / {
            proxy_pass http://flask_app;  # Reuse Flask upstream
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Server block to route requests via port 8001
    server {
        listen 8001;

        location / {
            proxy_pass http://flask_app;  # Reuse Flask upstream
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}